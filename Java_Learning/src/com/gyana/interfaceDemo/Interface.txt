
Definition of Interface:

Interface in Java is a contract, which all implemented classes have to follow. 	When a class implements an 
interface, it promises to provide implementation for all required fuctionalities. 

Interface is key to achieve polymorphism and abstraction.




Since Java 8, Interface can have default methods. 

default methods have body
they can be overridden in the implemented classes, but its not mandatory like other interface methods.

Reasons to have default methods in Interface :-

1. Backward compatibility : If the interface is implemented by lots of classes adding a new method will break 
                            all the classes. instead if you just define a default method, nothing will break
                            and all implemented classes can have access to the method.
                            
2. Defining common methods : This will be helpful when different implementing classes can use the same logic 
                             mentioned in the default method. So there will be no need to define the logic again.
                             
      
Static methods in Interface:

1. Static methods can not be overridden by the implemented classes
2. They can be defined as utility methods to perform common operations related to the interface.

3. Prior to Java 8, Most of the interfaces were mostly accompanied with a utility class. e.g. Collection is an 
   interface, however Collections is the utility class to perform basic operation on such objects. From java 8
   onwards this tradition can be broken & the utility classes can be defined in the Interface itself.
   
4. Adding static method will not impact the implemented classes as well as static methods need not be overridden.
